<?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use App\Http\Requests;use App\Models\User;use Illuminate\Support\Facades\Auth;class UsersController extends Controller{    public function __construct()    {        //让登陆用户只能浏览对应的页面        $this->middleware('auth',[            'except' => ['show','created','store','index']        ]);        //只让未登录用户访问注册页面        $this->middleware('guest', [            'only' => ['create']        ]);    }    //用户列表    public function index()    {        $users = User::paginate(10);        return view('users.index',compact('users'));    }    //注册页面    public function created()    {        return view('users.created');    }    //用户个人页面    public function show(User $user)    {        return view('users.show',compact('user'));    }    //注册逻辑    public function store(Request $request)    {        $this->validate($request,[            'name' => 'required|max:50',            'email' => 'required|email|unique:users|max:255',            'password' => 'required|confirmed|min:6'        ]);        //保存        $user = User::create([            'name' =>   $request->name,            'password' => bcrypt($request->password),            'email' => $request->email,        ]);        Auth::login($user);        session()->flash('success', '欢迎，您将在这里开启一段新的旅程~');        return redirect()->route('users.show', [$user]);    }    //用户编辑    public function edit(User $user)    {        $this->authorize('update', $user);        return view('users.edit',compact('user'));    }    //编辑成功    public function update(User $user,Request $request)    {        //验证        $this->validate($request, [            'name' => 'required|max:50',            'password' => 'required|confirmed|min:6'        ]);        $this->authorize('update', $user);        //提交        $user->update([            'name' => $request->name,            'password' => bcrypt($request->password),        ]);        session()->flash('success', '个人资料更新成功！');        //重定向        return redirect()->route('users.show', $user->id);    }    //删除用户    public function destroy(User $user)    {        $this->authorize('destroy', $user);        $user->delete();        session()->flash('success', '成功删除用户！');        return back();    }}