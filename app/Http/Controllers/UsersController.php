<?phpnamespace App\Http\Controllers;use Illuminate\Http\Request;use App\Http\Requests;use App\Models\User;use Illuminate\Support\Facades\Auth;use Mail;class UsersController extends Controller{    public function __construct()    {        //让登陆用户只能浏览对应的页面        $this->middleware('auth',[            'except' => ['show','created','store','index','confirmEmail']        ]);        //只让未登录用户访问注册页面        $this->middleware('guest', [            'only' => ['create']        ]);    }    //用户列表    public function index()    {        $users = User::paginate(10);        return view('users.index',compact('users'));    }    //注册页面    public function created()    {        return view('users.created');    }    //用户个人页面    public function show(User $user)    {        $statuses = $user->statuses()            ->orderBy('created_at', 'desc')            ->paginate(30);        return view('users.show', compact('user', 'statuses'));    }    //注册逻辑    public function store(Request $request)    {        $this->validate($request,[            'name' => 'required|max:50',            'email' => 'required|email|unique:users|max:255',            'password' => 'required|confirmed|min:6'        ]);        //保存        $user = User::create([            'name' =>   $request->name,            'password' => bcrypt($request->password),            'email' => $request->email,        ]);        $this->sendEmailConfirmationTo($user);        session()->flash('success', '验证邮件已发送到你的注册邮箱上，请注意查收。');        return redirect('/');    }    //用户编辑    public function edit(User $user)    {        $this->authorize('update', $user);        return view('users.edit',compact('user'));    }    //编辑成功    public function update(User $user,Request $request)    {        //验证        $this->validate($request, [            'name' => 'required|max:50',            'password' => 'required|confirmed|min:6'        ]);        $this->authorize('update', $user);        //提交        $user->update([            'name' => $request->name,            'password' => bcrypt($request->password),        ]);        session()->flash('success', '个人资料更新成功！');        //重定向        return redirect()->route('users.show', $user->id);    }    //删除用户    public function destroy(User $user)    {        $this->authorize('destroy', $user);        $user->delete();        session()->flash('success', '成功删除用户！');        return back();    }    protected function sendEmailConfirmationTo($user)    {        $view = 'emails.confirm';        $data = compact('user');        $from = 'aufree@yousails.com';        $name = 'Aufree';        $to = $user->email;        $subject = "感谢注册 Sample 应用！请确认你的邮箱。";        Mail::send($view, $data, function ($message) use ($from, $name, $to, $subject) {            $message->to($to)->subject($subject);        });    }    public function confirmEmail($token)    {        $user = User::where('activation_token', $token)->firstOrFail();        $user->activated = true;        $user->activation_token = null;        $user->save();        Auth::login($user);        session()->flash('success', '恭喜你，激活成功！');        return redirect()->route('users.show', [$user]);    }}